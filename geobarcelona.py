# -*- coding: utf-8 -*-
"""
/***************************************************************************
                               GeoBarcelona
 
 A QGIS plugin to search and zoom addresses in Barcelona city 
 
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/

        copyright            : (C) 2019 by Javier Casado
        email                : javicasnov@hotmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   any later version.                                                    *
 *                                                                         *
 ***************************************************************************/
"""

from PyQt5 import QtWidgets, uic
from PyQt5.QtCore import QSettings, QTranslator, qVersion, QCoreApplication, Qt, QTimer
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QAction, QMenu, QMessageBox

# Initialize Qt resources from file resources.py
from .resources import *

# Import the code for the DockWidget
from .geobarcelona_dockwidget import GeoBarcelonaDockWidget
from .geobarcelona_locator import GeoBarcelonaLocatorFilter

import qgis.utils
import os.path

class GeoBarcelona(object):

    """QGIS Plugin Implementation."""

    def __init__(self, iface):
        """Constructor.

        :param iface: An interface instance that will be passed to this class
            which provides the hook by which you can manipulate the QGIS
            application at run time.
        :type iface: QgsInterface
        """
        # Save reference to the QGIS interface
        self.iface = iface
        
        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)

        # initialize locale
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            'GeoBarcelona_{}.qm'.format(locale))

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)

            if qVersion() > '4.3.3':
                QCoreApplication.installTranslator(self.translator)

        # Declare instance attributes
        self.actions = []
        
        # TODO: We are going to let the user set this up in a future iteration
        self.toolbar = self.iface.pluginToolBar()
        #self.toolbar = self.iface.addToolBar(u'GeoBarcelona')
        #self.toolbar.setObjectName(u'GeoBarcelona')

        #print "** INITIALIZING GeoBarcelona"

        self.pluginIsActive = False
        self.dockwidget = None
        
        self.filter = GeoBarcelonaLocatorFilter(self.iface)
        self.iface.registerLocatorFilter(self.filter)
        
    def initGui(self):
        """Create the menu entries and toolbar icons inside the QGIS GUI."""
               
        self.geobcn_menu = QMenu(u'GeoBarcelona')
        self.geobcn_menu.setIcon(QIcon(':/plugins/geobarcelona/icon.png'))

        self.openpanel_item = QAction(QIcon(':/plugins/geobarcelona/icon.png'),
                               QCoreApplication.translate('GeoBarcelona',u'Open/Close panel'), self.iface.mainWindow())
        self.openpanel_item.triggered.connect(self.run)
        
        self.help_item = QAction(QIcon(':/plugins/geobarcelona/help.png'),
                                        QCoreApplication.translate('GeoBarcelona',u'Help'), self.iface.mainWindow())
        self.help_item.triggered.connect(self.help)

        self.about_item = QAction(QIcon(':/plugins/geobarcelona/about.png'),
                                        QCoreApplication.translate('GeoBarcelona',u'About'), self.iface.mainWindow())
        self.about_item.triggered.connect(self.about)
        
        self.toolbar_item = QAction(QIcon(':/plugins/geobarcelona/icon.png'),
                               QCoreApplication.translate('GeoBarcelona',u'Open/Close GeoBarcelona panel'), self.iface.mainWindow())
        self.toolbar_item.triggered.connect(self.run)
        self.toolbar.addAction(self.toolbar_item)

        self.actions = [self.openpanel_item, self.help_item, self.about_item]
        self.geobcn_menu.addActions(self.actions)
        
        self.menu = self.iface.pluginMenu()
        self.menu.addMenu(self.geobcn_menu) 

    def onClosePlugin(self):
        """Cleanup necessary items here when plugin dockwidget is closed"""

        #print "** CLOSING GeoBarcelona"

        # disconnects
        self.dockwidget.closingPlugin.disconnect(self.onClosePlugin)

        # remove this statement if dockwidget is to remain
        # for reuse if plugin is reopened
        # Commented next statement since it causes QGIS crashe
        # when closing the docked window:
        # self.dockwidget = None
        
        self.pluginIsActive = False

    def unload(self):
        """Removes the plugin menu item and icon from QGIS GUI."""

        self.menu.removeAction(self.geobcn_menu.menuAction())
        self.toolbar.removeAction(self.toolbar_item)
        self.iface.deregisterLocatorFilter(self.filter)

    def run(self):
        """Run method that loads and starts the plugin"""

        if not self.pluginIsActive:
            
            self.pluginIsActive = True

            if self.dockwidget == None:

                self.dockwidget = GeoBarcelonaDockWidget(self.iface)
                self.iface.addDockWidget(Qt.LeftDockWidgetArea, self.dockwidget)
            
            self.dockwidget.closingPlugin.connect(self.onClosePlugin)
            self.dockwidget.show()
            QTimer.singleShot(0,self.dockwidget.text_focus)

        else:
        
            self.dockwidget.closingPlugin.disconnect(self.onClosePlugin)
            self.pluginIsActive = False
            self.dockwidget.delete_data()
            self.dockwidget.hide()
    
    def help(self):
        """Display a help page"""
        qgis.utils.showPluginHelp()
    
    def about(self):
        """Show the about dialog box"""
        about_dialog = QMessageBox()
        about_dialog.setIcon(QMessageBox.NoIcon)
        about_dialog.setStandardButtons(QMessageBox.Close)
        about_dialog.setWindowTitle(QCoreApplication.translate('GeoBarcelona',u'GeoBarcelona - About'))        
        about_dialog.setText(QCoreApplication.translate('GeoBarcelona',u'<html><body><h2 style="text-align:center">GeoBarcelona</h2><p style="text-align:center">QGIS plugin to search and zoom to any address in Barcelona&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style="text-align:center">Version 1.0 - March 2019</p><div>-------------------------------------------------------------------</div><p style="text-align:center">DEVELOPED AND MAINTAINED BY:</p><p style="text-align:center">Javier Casado</p></body></html>'))
        about_dialog.exec_()
